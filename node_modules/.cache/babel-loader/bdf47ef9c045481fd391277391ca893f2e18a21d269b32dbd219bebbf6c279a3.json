{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Documents\\\\Projects\\\\React\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar.js';\nimport TextForm from './components/TextForm.js';\nimport Alert from './components/Alert';\nimport { createBrowserRouter, RouterProvider, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello world!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 14\n  }, this)\n}]);\nReactDOM.createRoot(document.getElementById(\"root\")).render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this));\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#01386e\";\n      showAlert('Dark mode has been enabled', 'success');\n      document.title = \"TextUtis DarkMode\";\n      /*setInterval(() => {\n        document.title = \"TextUtis is Amazing Mode\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Install TextUtis now\";\n      }, 1250);*/\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      //document.title = \"TextUtis LightMode\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Enter the text to analyze below\",\n              mode: mode,\n              ShowAlert: showAlert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","TextForm","Alert","createBrowserRouter","RouterProvider","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","router","path","element","children","fileName","_jsxFileName","lineNumber","columnNumber","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","body","style","backgroundColor","title","Router","className","Routes","heading","ShowAlert","_c","$RefreshReg$"],"sources":["C:/Users/Rahul/Documents/Projects/React/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar.js'\nimport TextForm from './components/TextForm.js'\nimport Alert from './components/Alert';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <div>Hello world!</div>,\n  },\n]);\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },1500)\n  }\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = \"#01386e\";\n      showAlert('Dark mode has been enabled', 'success')\n      document.title =\"TextUtis DarkMode\"\n      /*setInterval(() => {\n        document.title = \"TextUtis is Amazing Mode\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Install TextUtis now\";\n      }, 1250);*/\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      //document.title = \"TextUtis LightMode\";\n    }\n  }\n  return (\n    <>\n\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route path=\"/about\" element={<About />} />\n            <Route\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                  ShowAlert={showAlert}\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}